import React, { DetailedHTMLProps, FormHTMLAttributes } from 'react';
import { ObjectSchema } from 'yup';
import { Omit } from './types';
declare type HTMLFormProps = DetailedHTMLProps<FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>;
interface Context {
    [key: string]: any;
}
interface Helpers {
    resetForm: (data?: object) => void;
}
interface FormContent {
    [key: string]: any;
}
export interface SubmitHandler<T = FormContent> {
    (data: T, helpers: Helpers): void;
}
export interface FormProps extends Omit<HTMLFormProps, 'onSubmit'> {
    initialData?: object;
    children: React.ReactNode;
    context?: Context;
    schema?: ObjectSchema<object>;
    onSubmit: SubmitHandler;
}
export default function Form({ initialData, children, schema, context, onSubmit, ...rest }: FormProps): JSX.Element;
export {};
